/*
 * Copyright (c) 2016, kret
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package trace.ui.frames;

import javax.swing.AbstractButton;
import javax.swing.JDesktopPane;

/**
 *
 * @author kret
 */
public class FrameMainWindow extends javax.swing.JFrame {

    /**
     * Creates new form FormMainWindow
     */
    public FrameMainWindow() {
        initComponents();
    }
    
    public JDesktopPane getDesktopPane()
    {
        return DesktopPane;
    }
    
    public AbstractButton getTriggerExit()
    {
        return MenuItemExit;
    } 
    
    public AbstractButton getTriggerOpen()
    {
        return MenuItemOpen;
    }
    
    public AbstractButton getTriggerSettings()
    {
        return MenuItemSettings;
    }
    
    public AbstractButton getTriggerAbout()
    {
        return MenuAbout;
    }
    
    public AbstractButton getTrigggerConnect()
    {
        return MenuItemConnect;
    }
    
    public AbstractButton getTriggerDisconnect()
    {
        return MenuItemDisconnect;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DesktopPane = new javax.swing.JDesktopPane();
        MenuBarMain = new javax.swing.JMenuBar();
        ManuFile = new javax.swing.JMenu();
        MenuItemOpen = new javax.swing.JMenuItem();
        MenuItemConnect = new javax.swing.JMenuItem();
        MenuItemDisconnect = new javax.swing.JMenuItem();
        MenuSeparatorExit = new javax.swing.JPopupMenu.Separator();
        MenuItemExit = new javax.swing.JMenuItem();
        MenuOptions = new javax.swing.JMenu();
        MenuItemSettings = new javax.swing.JMenuItem();
        MenuAbout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DesktopPane.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        DesktopPane.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledText"));
        DesktopPane.setPreferredSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout DesktopPaneLayout = new javax.swing.GroupLayout(DesktopPane);
        DesktopPane.setLayout(DesktopPaneLayout);
        DesktopPaneLayout.setHorizontalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        DesktopPaneLayout.setVerticalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        ManuFile.setText("File");
        ManuFile.setToolTipText("");

        MenuItemOpen.setText("Open...");
        ManuFile.add(MenuItemOpen);

        MenuItemConnect.setText("Connect...");
        ManuFile.add(MenuItemConnect);

        MenuItemDisconnect.setText("Disconnect");
        ManuFile.add(MenuItemDisconnect);
        ManuFile.add(MenuSeparatorExit);

        MenuItemExit.setText("Exit");
        ManuFile.add(MenuItemExit);

        MenuBarMain.add(ManuFile);

        MenuOptions.setText("Options");
        MenuOptions.setToolTipText("");

        MenuItemSettings.setText("Settings...");
        MenuOptions.add(MenuItemSettings);

        MenuBarMain.add(MenuOptions);

        MenuAbout.setText("?");
        MenuBarMain.add(MenuAbout);

        setJMenuBar(MenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane DesktopPane;
    private javax.swing.JMenu ManuFile;
    private javax.swing.JMenu MenuAbout;
    private javax.swing.JMenuBar MenuBarMain;
    private javax.swing.JMenuItem MenuItemConnect;
    private javax.swing.JMenuItem MenuItemDisconnect;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemOpen;
    private javax.swing.JMenuItem MenuItemSettings;
    private javax.swing.JMenu MenuOptions;
    private javax.swing.JPopupMenu.Separator MenuSeparatorExit;
    // End of variables declaration//GEN-END:variables
}
